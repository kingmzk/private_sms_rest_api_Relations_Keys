# Generated by Django 4.2.1 on 2023-07-06 18:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('modtest', '0006_alter_optytracker_op_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Microservice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OppMicroservice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('micro_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modtest.microservice')),
                ('opty_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modtest.optytracker')),
            ],
        ),
        migrations.CreateModel(
            name='OppCompetation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modtest.competation')),
                ('opty_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modtest.optytracker')),
            ],
        ),
        migrations.AddField(
            model_name='optytracker',
            name='Competations',
            field=models.ManyToManyField(through='modtest.OppCompetation', to='modtest.competation'),
        ),
        migrations.AddField(
            model_name='optytracker',
            name='Microservices',
            field=models.ManyToManyField(through='modtest.OppMicroservice', to='modtest.microservice'),
        ),
    ]
